{"is_source_file": true, "format": "JavaScript", "description": "This file provides client-side API interaction functions for a React-based front-end. It includes functions for authentication, conversation management, messaging, and knowledge search, interfacing with a backend API.", "external_files": ["fetch", "process.env", "Headers", "Response", "Error", "JSON", "Text"], "external_methods": ["fetch"], "published": ["setAccessToken", "getAccessToken", "login", "register", "getProfile", "listConversations", "createConversation", "getConversation", "sendMessage", "searchKnowledge"], "classes": [], "methods": [{"name": "setAccessToken(token)", "description": "Sets the in-memory access token used for authenticated API requests.", "scope": "", "scopeKind": ""}, {"name": "getAccessToken()", "description": "Retrieves the current in-memory access token.", "scope": "", "scopeKind": ""}, {"name": "buildHeaders(extra = {})", "description": "Constructs HTTP headers for API requests, including JSON content type and Authorization if an access token is set.", "scope": "", "scopeKind": ""}, {"name": "request(path, options = {})", "description": "Core function to perform fetch requests, handle responses and errors, returning parsed data.", "scope": "", "scopeKind": ""}, {"name": "login(email, password)", "description": "Performs user login with email and password, stores access token on success.", "scope": "", "scopeKind": ""}, {"name": "register(email, password)", "description": "Registers a new user with email and password.", "scope": "", "scopeKind": ""}, {"name": "getProfile()", "description": "Fetches current user profile information from the backend.", "scope": "", "scopeKind": ""}, {"name": "listConversations()", "description": "Retrieves list of user conversations, with fallback to an alternative endpoint if not found.", "scope": "", "scopeKind": ""}, {"name": "createConversation(title)", "description": "Creates a new conversation with a given title.", "scope": "", "scopeKind": ""}, {"name": "getConversation(conversationId)", "description": "Fetches details of a specific conversation, with fallback to messages endpoint.", "scope": "", "scopeKind": ""}, {"name": "sendMessage(conversationId, message)", "description": "Sends a message within a conversation and returns the updated chat state.", "scope": "", "scopeKind": ""}, {"name": "searchKnowledge(query)", "description": "Performs a semantic or RAG-based search for related knowledge snippets.", "scope": "", "scopeKind": ""}], "calls": ["fetch", "request", "setAccessToken", "buildHeaders", "request", "request", "request", "request", "request", "request", "request", "request"], "search-terms": ["api.js", "auth", "conversations", "messages", "semantic search", "RAG", "backend API", "authentication"], "state": 2, "file_id": 13, "knowledge_revision": 52, "git_revision": "01880c1c1ec83b3258c37039bbf282fb8ffad013", "revision_history": [{"27": ""}, {"50": "01880c1c1ec83b3258c37039bbf282fb8ffad013"}, {"51": "01880c1c1ec83b3258c37039bbf282fb8ffad013"}, {"52": "01880c1c1ec83b3258c37039bbf282fb8ffad013"}], "ctags": [{"_type": "tag", "name": "BASE_URL", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2909/company_chatbot_frontend/src/services/api.js", "pattern": "/^const BASE_URL = process.env.REACT_APP_BACKEND_URL || \"\";$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "Content-Type", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2909/company_chatbot_frontend/src/services/api.js", "pattern": "/^    \"Content-Type\": \"application\\/json\",$/", "language": "JavaScript", "kind": "property", "scope": "buildHeaders.headers", "scopeKind": "class"}, {"_type": "tag", "name": "accessToken", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2909/company_chatbot_frontend/src/services/api.js", "pattern": "/^let accessToken = null;$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "buildHeaders", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2909/company_chatbot_frontend/src/services/api.js", "pattern": "/^function buildHeaders(extra = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "(extra = {})"}, {"_type": "tag", "name": "createConversation", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2909/company_chatbot_frontend/src/services/api.js", "pattern": "/^export async function createConversation(title) {$/", "language": "JavaScript", "kind": "function", "signature": "(title)"}, {"_type": "tag", "name": "getAccessToken", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2909/company_chatbot_frontend/src/services/api.js", "pattern": "/^export function getAccessToken() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "getConversation", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2909/company_chatbot_frontend/src/services/api.js", "pattern": "/^export async function getConversation(conversationId) {$/", "language": "JavaScript", "kind": "function", "signature": "(conversationId)"}, {"_type": "tag", "name": "getProfile", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2909/company_chatbot_frontend/src/services/api.js", "pattern": "/^export async function getProfile() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2909/company_chatbot_frontend/src/services/api.js", "pattern": "/^  const headers = {$/", "language": "JavaScript", "kind": "class", "scope": "buildHeaders", "scopeKind": "class"}, {"_type": "tag", "name": "listConversations", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2909/company_chatbot_frontend/src/services/api.js", "pattern": "/^export async function listConversations() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2909/company_chatbot_frontend/src/services/api.js", "pattern": "/^export async function login(email, password) {$/", "language": "JavaScript", "kind": "function", "signature": "(email, password)"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2909/company_chatbot_frontend/src/services/api.js", "pattern": "/^export async function register(email, password) {$/", "language": "JavaScript", "kind": "function", "signature": "(email, password)"}, {"_type": "tag", "name": "request", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2909/company_chatbot_frontend/src/services/api.js", "pattern": "/^async function request(path, options = {}) {$/", "language": "JavaScript", "kind": "function", "signature": "(path, options = {})"}, {"_type": "tag", "name": "searchKnowledge", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2909/company_chatbot_frontend/src/services/api.js", "pattern": "/^export async function searchKnowledge(query) {$/", "language": "JavaScript", "kind": "function", "signature": "(query)"}, {"_type": "tag", "name": "sendMessage", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2909/company_chatbot_frontend/src/services/api.js", "pattern": "/^export async function sendMessage(conversationId, message) {$/", "language": "JavaScript", "kind": "function", "signature": "(conversationId, message)"}, {"_type": "tag", "name": "setAccessToken", "path": "/home/kavia/workspace/code-generation/intelligent-chatbot-platform-2899-2909/company_chatbot_frontend/src/services/api.js", "pattern": "/^export function setAccessToken(token) {$/", "language": "JavaScript", "kind": "function", "signature": "(token)"}], "hash": "cc6e6f6b608841f16043bfef8be4a816", "format-version": 4, "code-base-name": "company_chatbot_frontend", "filename": "company_chatbot_frontend/src/services/api.js", "fields": [{"name": "\"Content-Type\": \"application\\/json\",", "scope": "buildHeaders.headers", "scopeKind": "class", "description": "unavailable"}, {"name": "let accessToken = null;", "scope": "", "scopeKind": "", "description": "unavailable"}]}